name: Update Tokenlist

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  update-tokenlist:
    runs-on: ubuntu-latest
    steps:
      # Set up python
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache Python environment
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/poetry
            .venv
          key: ${{ runner.os }}-python-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry and dependencies
        run: |
          if ! command -v poetry &> /dev/null; then
            curl -sSL https://install.python-poetry.org | python3 -
          fi
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root

      # Check existing tokenlist, and if there are missing tokens, generate
      # a fresh tokenlist and commit it to the repo.
      - name: Check existing tokenlist
        id: check-tokenlist
        run: |
          poetry run python check_tokenlist.py
        continue-on-error: true
      - name: Generate tokenlist if check failed
        if: steps.check-tokenlist.outcome == 'failure'
        env:
          DRPC_KEY: ${{ secrets.DRPC_KEY }}
        run: |
          poetry run python generate_curve_tokenlist.py
      - name: Commit changes
        if: github.event_name != 'pull_request'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add curve_tokenlist.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Update tokenlist" -a
      - name: Push changes
        if: github.event_name != 'pull_request'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
