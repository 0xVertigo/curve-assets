name: Tokenlist Update

on:
  pull_request:
    paths:
      - "images/**/*.png"
  workflow_dispatch:

jobs:
  update-tokenlist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Generate new tokenlist
        env:
          DRPC_KEY: ${{ secrets.DRPC_KEY }}
        run: |
          poetry run python generate_curve_tokenlist.py
          if [ $? -ne 0 ]; then
            echo "Failed to generate new tokenlist"
            exit 1
          fi

      - name: Check tokenlist for missing tokens
        id: check_tokenlist
        run: |
          poetry run python check_tokenlist.py
          if [ $? -ne 0 ]; then
            echo "Missing tokens detected. Pipeline will be stopped."
            exit 1
          fi

      - name: Check for changes
        id: git_status
        run: |
          git diff --exit-code curve_tokenlist.json || echo "CHANGES_DETECTED=true" >> $GITHUB_ENV

      - name: Commit changes
        if: env.CHANGES_DETECTED == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add curve_tokenlist.json
          git commit -m "Update tokenlist"

      - name: Push changes
        if: env.CHANGES_DETECTED == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}

      - name: Comment PR
        if: env.CHANGES_DETECTED == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Tokenlist has been updated automatically. Please review the changes.'
            })
